 @ 내부 클래스
클래스 안에 만들어진 다른 클래스를 중첩 클래스.
독립적으로 선언하는 것이 독립적으로 좋으나 특정 클래스 관계를 맺을 경우 중첩 클래스로 선언하는 것이 유지보수에 좋다.
코드의 복잡성을 감추기 위해 멤버를 쉽게 사용 할 수있다.

외부 클래스 : 자동차
내부 클래스 : 엔진/ 기어/ 방향지시등/ 핸들

 @ 내부 클래스의 종류
1) 멤버 클래스/ 로컬 클래스
- 인스턴스 멤버 클래스 : 외부 클래스를 객체로 만들고 내부 클래스를 허용한다.
코드형식)
[접근제한자] class A { 외부 클래스: 자동차
	[접근제한자] class B { 내부 클래스: 엔진
	}
}

- 정적 멤버 클래스 : 외부 클래스 객체로 만들 필요가 없다. 내부 클래스를 허용한다.
A 객체를 생성하지 않아도 B 객체를 생성할 수 있다.
코드형식)
[접근제한자] class A {
	[접근제한자] static class B {
	} 
}
1. 내부 클래스 (static) : 외부 클래스 인스턴스 멤버 변수 사용 불가
2. 내부 클래스 객체를 직접적으로 생성해서 내부 클래스 메서드를 바로 호출 할 수 있었다.

- 로컬(지역) 클래스 : 생성자/ 메서드를 통해서만 생성 될 수 있다.
(local class: 내부 안에서 실행 됨.)
생성자나 메서드 내부 안에서 실행 될 때 만 B 객체를 생성한다.
외부 클래스
class A {
	A() { // 외부 클래스 생성자 호출 가능
		class B {}	
		B b = new B(); // 외부 클래스 생성자 객체안에서 생성,호출 가능
	}

	void method() {
		class B{}
		B b = new B(); // 생성자 객체 생성,호출 가능
	}
	
}
1. 메서드나 생성자가 호출이 종료되면 지역 클래스의 인스턴스도 종료된다.